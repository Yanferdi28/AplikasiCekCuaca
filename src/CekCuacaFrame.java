/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.Scanner;
import org.json.JSONObject;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import java.io.FileWriter;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.FileReader;
import javax.imageio.ImageIO;
import java.awt.Image;
/**
 *
 * @author Fetra
 */
public class CekCuacaFrame extends javax.swing.JFrame {
    
    private ArrayList<String> lokasiFavorit = new ArrayList<>();
    private DefaultTableModel tableModel;

    /**
     * Creates new form CekCuacaFrame
     */
    public CekCuacaFrame() {
        initComponents();
        initEventHandlers();
        tableModel = new DefaultTableModel(new Object[]{"Kota", "Cuaca", "Suhu"}, 0);
        tblCuaca.setModel(tableModel);
        loadLokasiFavorit();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblCuaca = new javax.swing.JLabel();
        lblSuhu = new javax.swing.JLabel();
        cbKota = new javax.swing.JComboBox<>();
        txtCari = new javax.swing.JTextField();
        btnCek = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCuaca = new javax.swing.JTable();
        btnMuat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Cek Cuaca");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Aplikasi Cek Cuaca");
        jPanel1.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Cari Nama Kota");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Pilih Kota");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Informasi Cuaca");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(jLabel4, gridBagConstraints);

        lblCuaca.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCuaca.setText("Cuaca :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(lblCuaca, gridBagConstraints);

        lblSuhu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSuhu.setText("Suhu :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(lblSuhu, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 75;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(cbKota, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(txtCari, gridBagConstraints);

        btnCek.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCek.setText("Cek Cuaca");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(btnCek, gridBagConstraints);

        btnSimpan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSimpan.setText("Simpan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        jPanel2.add(btnSimpan, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Cuaca", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setPreferredSize(new java.awt.Dimension(300, 300));

        tblCuaca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblCuaca);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 284;
        gridBagConstraints.ipady = 280;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 0);
        jPanel3.add(jScrollPane2, gridBagConstraints);

        btnMuat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMuat.setText("Muat Data Cuaca");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel3.add(btnMuat, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 7;
        jPanel2.add(jPanel3, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void initEventHandlers() {
        // Event handler untuk tombol Cek Cuaca
        btnCek.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cekCuacaActionPerformed(evt);
            }
        });

        // Event handler untuk perubahan item pada JComboBox
        cbKota.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt) {
                if (evt.getStateChange() == ItemEvent.SELECTED) {
                    txtCari.setText((String) cbKota.getSelectedItem());
                }
            }
        });

        // Event handler untuk tombol Simpan
        btnSimpan.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                simpanDataCuaca();
            }
        });

        // Event handler untuk tombol Muat Data
        btnMuat.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                muatDataCuaca();
            }
        });
    }

    private void cekCuacaActionPerformed(ActionEvent evt) {
        String apiKey = "528c4ceb36aaecefd267e3ce8129ca25"; // Ganti dengan API key OpenWeatherMap
        String kota = txtCari.getText().trim();
        
        if (!kota.isEmpty()) {
            JSONObject cuacaData = ambilDataCuaca(apiKey, kota);
            if (cuacaData != null) {
                tampilkanDataCuaca(cuacaData, kota);
            } else {
                JOptionPane.showMessageDialog(this, "Kota tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private JSONObject ambilDataCuaca(String apiKey, String kota) {
        try {
            URL url = new URL("http://api.openweathermap.org/data/2.5/weather?q=" + kota + "&appid=" + apiKey + "&units=metric");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.connect();

            int responseCode = conn.getResponseCode();
            if (responseCode == 200) {
                StringBuilder inline = new StringBuilder();
                Scanner scanner = new Scanner(url.openStream());

                while (scanner.hasNext()) {
                    inline.append(scanner.nextLine());
                }
                scanner.close();

                return new JSONObject(inline.toString());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return null;
    }

    private void tampilkanDataCuaca(JSONObject json, String kota) {
        String cuaca = json.getJSONArray("weather").getJSONObject(0).getString("main");
        String cuacaTerjemahan = terjemahkanCuaca(cuaca); // Panggil terjemahan
        double suhu = json.getJSONObject("main").getDouble("temp");
        String iconId = json.getJSONArray("weather").getJSONObject(0).getString("icon");

        lblCuaca.setText("Cuaca: " + cuacaTerjemahan); // Tampilkan terjemahan cuaca
        lblSuhu.setText("Suhu: " + suhu + "°C");

        ImageIcon cuacaIcon = getWeatherIcon(iconId);
        if (cuacaIcon != null) {
            lblCuaca.setIcon(cuacaIcon);
            lblCuaca.setIconTextGap(10);
            lblCuaca.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        }
        
        tableModel.addRow(new Object[]{kota, cuacaTerjemahan, suhu});

        if (!lokasiFavorit.contains(kota)) {
            lokasiFavorit.add(kota);
            cbKota.addItem(kota);
        }
    }
    
    // Metode untuk menerjemahkan cuaca ke Bahasa Indonesia
    private String terjemahkanCuaca(String cuaca) {
        switch (cuaca.toLowerCase()) {
            case "clear":
                return "Cerah";
            case "clouds":
                return "Berawan";
            case "rain":
                return "Hujan";
            case "snow":
                return "Salju";
            case "thunderstorm":
                return "Badai";
            case "drizzle":
                return "Gerimis";
            case "mist":
                return "Kabut";
            default:
                return cuaca; // Jika tidak ditemukan, gunakan teks asli
        }
    }




    private ImageIcon getWeatherIcon(String iconId) {
        try {
            URL url = new URL("http://openweathermap.org/img/wn/" + iconId + "@2x.png");
            Image image = ImageIO.read(url);
            return new ImageIcon(image);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat ikon cuaca: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return null;
    }

    private void simpanDataCuaca() {
        try (FileWriter writer = new FileWriter("data_cuaca.csv")) {
            for (int i = 0; i < tableModel.getRowCount(); i++) {
                writer.write(tableModel.getValueAt(i, 0) + "," + tableModel.getValueAt(i, 1) + "," + tableModel.getValueAt(i, 2) + "\n");
            }
            writer.flush();
            JOptionPane.showMessageDialog(this, "Data cuaca berhasil disimpan ke data_cuaca.csv");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void muatDataCuaca() {
        try (BufferedReader reader = new BufferedReader(new FileReader("data_cuaca.csv"))) {
            String line;
            tableModel.setRowCount(0);
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                tableModel.addRow(data);
            }
            JOptionPane.showMessageDialog(this, "Data cuaca berhasil dimuat dari data_cuaca.csv");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadLokasiFavorit() {
        cbKota.removeAllItems();
        for (String kota : lokasiFavorit) {
            cbKota.addItem(kota);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CekCuacaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CekCuacaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CekCuacaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CekCuacaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CekCuacaFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCek;
    private javax.swing.JButton btnMuat;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox<String> cbKota;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCuaca;
    private javax.swing.JLabel lblSuhu;
    private javax.swing.JTable tblCuaca;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables
}
